## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: |-

  API endpoints for managing authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        API endpoints for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be between 2 and 100 characters.'
        required: true
        example: bc
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 100 characters.'
        required: true
        example: george.dibbert@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 4 characters.'
        required: true
        example: 'O4kU`il79P?z#*d'
        type: string
        custom: []
    cleanBodyParameters:
      name: bc
      email: george.dibbert@example.org
      password: 'O4kU`il79P?z#*d'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "User successfully registered",
           "user": {
            "name": "Test",
            "email": "test1@test.com",
            "updated_at": "2023-06-15T12:04:26.000000Z",
            "created_at": "2023-06-15T12:04:26.000000Z",
            "id": 2
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        API endpoints for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a JWT via given credentials.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: tbartell@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 4 characters.'
        required: true
        example: G)9@No<R^!ZYJp
        type: string
        custom: []
    cleanBodyParameters:
      email: tbartell@example.org
      password: G)9@No<R^!ZYJp
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "access_token": "eyJ0eXA...",
           "token_type": "Bearer",
           "expires_in": "2023-06-15T12:39:21.898199Z",
            "user": {
            "id": 1,
            "name": "Test",
            "email": "test@test.com",
            "total_amount": "10000000.00",
            "created_at": null,
            "updated_at": null
            }

          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        API endpoints for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Log the user out.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "User successfully signed out",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a36bE8Paeh4gdkVD561fvZc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/refresh
    metadata:
      groupName: Authentication
      groupDescription: |-

        API endpoints for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Refresh a token.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "access_token": "eyJ0eXA...",
           "token_type": "Bearer",
           "expires_in": "2023-06-15T12:39:21.898199Z",
            "user": {
            "id": 1,
            "name": "Test",
            "email": "test@test.com",
            "total_amount": "10000000.00",
            "created_at": null,
            "updated_at": null
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1ZEhPaf6dDg384v5Vcekba6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/user-profile
    metadata:
      groupName: Authentication
      groupDescription: |-

        API endpoints for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the authenticated User.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Test",
            "email": "test@test.com",
            "total_amount": "10000000.00",
            "created_at": null,
            "updated_at": null
            }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 668h31ZPVdDEaevkaf4cg5b'
    controller: null
    method: null
    route: null
    custom: []
