## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Expense CRUD'
description: |-

  API endpoints for managing Expense CRUD operations
endpoints:
  -
    httpMethods:
      - GET
    uri: api/expenses
    metadata:
      groupName: 'Expense CRUD'
      groupDescription: |-

        API endpoints for managing Expense CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all expenses with pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      category:
        name: category
        description: 'Filter by ID of a category. Example 1.'
        required: false
        example: 7
        type: integer
        custom: []
      price_min:
        name: price_min
        description: 'Filter by minimum amount of an expense.'
        required: false
        example: 100
        type: integer
        custom: []
      price_max:
        name: price_max
        description: 'Filter by maximum amount of an expense.'
        required: false
        example: 200
        type: integer
        custom: []
      date_from:
        name: date_from
        description: 'date string Filter by date created.'
        required: false
        example: 20-5-2023
        type: string
        custom: []
      date_to:
        name: date_to
        description: 'date string Filter by date created.'
        required: false
        example: 25-5-2023
        type: string
        custom: []
    cleanQueryParameters:
      category: 7
      price_min: 100
      price_max: 200
      date_from: 20-5-2023
      date_to: 25-5-2023
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {"current_page": 1,
           "data": [
           {
             "id": 1,
             "user_id": 1,
             "category_id": 1,
             "description": "Test description...",
             "amount": "196.00",
             "created_at": "2023-06-15T12:03:40.000000Z",
             "updated_at": null
            },
            {
             "id": 2,
             "user_id": 1,
             "category_id": 2,
             "description": "Test description...",
             "amount": "4893.00",
             "created_at": "2023-06-15T12:03:40.000000Z",
             "updated_at": null
            }
           ],
           "first_page_url": "http://devot.test/api/expenses?page=1",
           "from": 1,
           "last_page": 4,
           "last_page_url": "http://devot.test/api/expenses?page=4",
           "links": [
            {
             "url": null,
             "label": "&laquo; Previous",
             "active": false
            },
            {
             "url": "http://devot.test/api/expenses?page=1",
             "label": "1",
             "active": true
            },
            {
             "url": "http://devot.test/api/expenses?page=2",
             "label": "2",
             "active": false
            },
            {
             "url": "http://devot.test/api/expenses?page=3",
             "label": "3",
             "active": false
            },
            {
             "url": "http://devot.test/api/expenses?page=4",
             "label": "4",
             "active": false
            },
            {
             "url": "http://devot.test/api/expenses?page=2",
             "label": "Next &raquo;",
             "active": false
            }
           ],
           "next_page_url": "http://devot.test/api/expenses?page=2",
           "path": "http://devot.test/api/expenses",
           "per_page": 2,
           "prev_page_url": null,
           "to": 2,
           "total": 7
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zegcahkd36b5a84fEV1vDP6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/expenses
    metadata:
      groupName: 'Expense CRUD'
      groupDescription: |-

        API endpoints for managing Expense CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Store new expense.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: ''
        required: true
        example: 1
        type: int
        custom: []
      bill_id:
        name: bill_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      description:
        name: description
        description: 'Must be at least 8 characters. Must not be greater than 256 characters.'
        required: true
        example: 'Commodi cum eius sed pariatur incidunt ad.'
        type: string
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: 1200
        type: int
        custom: []
    cleanBodyParameters:
      category_id: consequatur
      description: 'Rerum ut nostrum laboriosam excepturi accusantium dolores.'
      amount: libero
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Expense successfully stored.",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6cZ3vfPDegaV4h1k8bd5aE6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/expenses/{id}'
    metadata:
      groupName: 'Expense CRUD'
      groupDescription: |-

        API endpoints for managing Expense CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Show single expense.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the expense.'
        required: true
        example: 1
        type: int
        custom: []
    cleanUrlParameters:
      id: doloremque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters:
      expense: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 2,
            "user_id": 1,
            "category_id": 2,
            "description": "Test description...",
            "amount": "4893.00",
            "created_at": "2023-06-15T12:03:40.000000Z",
            "updated_at": null
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f8kv4gEchZV3baP1ead56D6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/expenses/{id}'
    metadata:
      groupName: 'Expense CRUD'
      groupDescription: |-

        API endpoints for managing Expense CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an expense.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the expense.'
        required: true
        example: 1
        type: int
        custom: []
    cleanUrlParameters:
      id: atque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      category_id:
        name: category_id
        description: ''
        required: false
        example: null
        type: int
        custom: []
      description:
        name: description
        description: 'Must be at least 8 characters. Must not be greater than 256 characters.'
        required: false
        example: 'Nemo sit aut sit ducimus officiis saepe.'
        type: string
        custom: []
    cleanBodyParameters:
      expense: 19
      description: 'Voluptatem optio impedit sed voluptatem labore et.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Expense successfully updated.",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PVabZD65fE6c83vgk14deha'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/expenses/{id}'
    metadata:
      groupName: 'Expense CRUD'
      groupDescription: |-

        API endpoints for managing Expense CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an expense.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the expense.'
        required: true
        example: 1
        type: int
        custom: []
    cleanUrlParameters:
      id: minima
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters:
      expense: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Expense successfully deleted.",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g5h8eavZ6EDdaf4kb163cVP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/expenses/aggregate/{term}'
    metadata:
      groupName: 'Expense CRUD'
      groupDescription: |-

        API endpoints for managing Expense CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Get aggregate expenses.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      term:
        name: term
        description: ''
        required: true
        example: 'last_month, last_quarter, last_year, or this_year'
        type: string
        custom: []
    cleanUrlParameters:
      term: commodi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters:
      term: last_year
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "34602.00",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fD36Pbvhkdg4aE8cZVa651e'
    controller: null
    method: null
    route: null
    custom: []
