## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Category CRUD'
description: |-

  API endpoints for managing Category CRUD operations
endpoints:
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: 'Category CRUD'
      groupDescription: |-

        API endpoints for managing Category CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all categories with pagination'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: 'Filter by name of a category. Example 1.'
        required: false
        example: aliquam
        type: string
        custom: []
    cleanQueryParameters:
      name: aliquam
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {"current_page": 1,
           "data": [
            {
             "id": 1,
             "name": "Food",
             "created_at": null,
             "updated_at": null
            },
            {
             "id": 2,
             "name": "Household items",
             "created_at": null,
             "updated_at": null
            }
           ],
           "first_page_url": "http://devot.test/api/categories?page=1",
           "from": 1,
           "last_page": 4,
           "last_page_url": "http://devot.test/api/categories?page=4",
           "links": [
            {
             "url": null,
             "label": "&laquo; Previous",
             "active": false
            },
            {
             "url": "http://devot.test/api/categories?page=1",
             "label": "1",
             "active": true
            },
            {
             "url": "http://devot.test/api/categories?page=2",
             "label": "2",
             "active": false
            },
            {
             "url": "http://devot.test/api/categories?page=3",
             "label": "3",
             "active": false
            },
            {
             "url": "http://devot.test/api/categories?page=4",
             "label": "4",
             "active": false
            },
            {
             "url": "http://devot.test/api/categories?page=2",
             "label": "Next &raquo;",
             "active": false
            }
           ],
           "next_page_url": "http://devot.test/api/categories?page=2",
           "path": "http://devot.test/api/categories",
           "per_page": 2,
           "prev_page_url": null,
           "to": 2,
           "total": 7
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E8Zdhf66Dv4kV5bePaa13cg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/categories
    metadata:
      groupName: 'Category CRUD'
      groupDescription: |-

        API endpoints for managing Category CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Store new category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 4 characters.'
        required: true
        example: crosyqybmbgcxrxvlwteybvzrdych
        type: string
        custom: []
    cleanBodyParameters:
      name: crosyqybmbgcxrxvlwteybvzrdych
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Category successfully stored.",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer baVePk853ga61DZfEv6c4hd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{id}'
    metadata:
      groupName: 'Category CRUD'
      groupDescription: |-

        API endpoints for managing Category CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Show single category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: int
        custom: []
    cleanUrlParameters:
      id: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters:
      category: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "name": "Food",
           "created_at": null,
           "updated_at": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vV31P6Dhk8aa4bZfg5e6cdE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/categories/{id}'
    metadata:
      groupName: 'Category CRUD'
      groupDescription: |-

        API endpoints for managing Category CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: int
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 4 characters.'
        required: true
        example: test
        type: string
        custom: []
    cleanBodyParameters:
      category: 18
      name: uerkkjmywuxmhgyuvulmcwzpgmyrttvniqrpsgbklektzmfmjcfceyzuzemwlgnecdlpdpyhnnveweetsmgxmst
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Category successfully updated.",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E3e156ghZDva6cPdVfa4bk8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/categories/{id}'
    metadata:
      groupName: 'Category CRUD'
      groupDescription: |-

        API endpoints for managing Category CRUD operations
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a category.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: int
        custom: []
    cleanUrlParameters:
      id: ratione
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters:
      category: 6
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Category successfully deleted.",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 61e5bag3PvckDZE4d8hf6Va'
    controller: null
    method: null
    route: null
    custom: []
